

javaScript被设计用来向HTML页面添加交互行为.
javaScript是一种脚本语言(脚本语言是一种轻量级的编程语言)
javaScript由数行可执行的计算机代码组成.
java是一种解释性语言(即代码不需要预编译) 不是编程语言,不需要编译//浏览器会直接解析javaScript,hebody同级
javaScript通常直接嵌入Html页面中
javaScript跟java没关系
javaScript实现:核心(ECMAScript):它包含(基本语法,变量,关键自,保留字,数据类型,语句,函数等,)
                        文档对象(Dom)包含(整个html页面内容)

                           浏览器对象模型(BOM):包含(整个浏览器相关内容) 

区分大小写
变量是弱类型,定义必须要var  不要写类型,
ECMASript中的变量不一定需要初始化
变量声明不是必需的 
ECMAScript有5种原始类型(primitive type)即
undefined,以定义但为赋值 
null,未定义未声明 
boolean,
number,代表数字类型
string全部小写
null被认为是一个占位符,来解释typeof对null计算时返回'object"这一矛盾,但null实际上代表原始值(nul也是引用类型的默认值
全等号===直接比较 ;==号尝试转换!
非全等号!==
迭代语句又叫循环语句
onsubmit表单提交事件
javascripte的输出
警告框alert( );
向页面指定位置写入内容:innerHTML(属性)
向页面写入内容:document.write("")
```
js通常由事件触发,
触发函数,定义函数,
获取对象的控制权,
修改要操作的对象的属性或值
```
#定义函数



```
*function 函数名称()}
   函数体
 }
  * window.onload=function(){ } 
```
#常用事件
``` onclick单击
     ondblclick双击
     onmouseover鼠标放在上面
     onmouseout鼠标从上面离开
            onload 页面加载
onsubmit放在提交表单处(只有form才能提交)且需要return
``` #js中校验正则表达式的使用
```
 String 对象中的match.stirng.match("正 ")
      RegExp中的Test:检测字符串中的指定值并返回true or false.正则.test("String")

        案例:if(!/^[\d+@\d+(.\d)+/.test(email)){

                alert("邮箱格式不对");

                return false;



               } 
```
#html中的window对象
```
*setInterval(); :每隔多少毫秒执行某个表达式;
        *setInterval("函数名",5000)每5秒执行一次

* setTimeout() :多少毫秒后执行一次表达式
clearInterval()取消SetInterval的timeout
clearTimeout()取消setTimeout()的时间timeout
```
##注意javaScirpt中只有对象没有类万物皆对象
#js的事件
``` 
onload页面加载
onclick点击
onfocus ;获得焦点
onblur: 失去焦点
onsubmit 提交的时候
onchange :下拉列表改变事件
ondclick双击某个元素的事件
onkeydown:
onkeyup
onkeypress
onmousemove;
onmouseout
onmouseover
onmousedown
onmouseup


```
JS中写函数参数时不需要var直接写内容
## 表格各行换色;th(header),tb(tbody),一个表格可有多个tbody
```
var tab1=document.getElementbyid("tab");
var len=tab1.tbodys[0].rows.length;
for(var i=0;i<len;i++){
  if(i%2==0){
tab1.tBoudies[i].rows[i].style.backgroundcolor="green";
}else{


tab1.tBoudies[i].rows[i].style.backgroundcolor="black";


}


}
```
整个HTML文档称为DOCUMENT
```


标签代表所有的元素element
attribute代表属性
text文本
统称为NODE
```
#获取元素
```
document. getelementByid()
document. getelementByName();
document. getelementByTagName();
document.creatElement();
document.creatTextNode();

element.firstChild
element.lastChild
```
#添加节点
```
element.appendChild()添加到最后
element.insertBefore();在某个元素之前插入


```
#删除节点
```
element.removeChild();删除元素
```
#清除缓存
```
http;// www.baidu.com?time=new  Date().getTime();//每次都获取当时的时间改变路径,从而清除缓存
 
```
#常用函数对象
```
parseInt();
*parseInt("44444");
      parseFloat();
*parseFloat("156.021256");
eval("  " )将字符串当作脚本代码来运行
```
#编码和解码的方法
```
解码
decodeURI();
decodeURIComponent();
编码
encodeURI();
encodeURIComponent();
```
##引入方式


```

行内样式：直接在 HTML 的元素上使用 style 属性设置 CSS.

<h1 style="color:red;font-size:200px ;"> 标题 </h1>

 

Ø 页面内样式：在 HTML 的 <head> 标签中使用 <style> 标签设置 CSS.

        <style>

            h1{

                color:blue;

                font-size: 40px;

            }

        </style>

 

Ø 外部样式 : 单独定一个 .css 的文件 . 在 HTML 中引入该 CSS 文件 . 

<link href="../../css/demo1.css" rel="stylesheet" type="text/css" /> ```